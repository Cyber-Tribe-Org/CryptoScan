version: "3.8"

services:
    # # Frontend Client in VueJS
    frontend:
        container_name: cryptoscan-frontend
        build:
            context: ${PWD}/frontend/
            dockerfile: Dockerfile
        image: cryptoscan-frontend
        command: npm start
        ports:
            - 8000:3000
        volumes:
            - ${PWD}/frontend/:/etc/frontend/:delegated
        depends_on:
            - nginx
        restart: unless-stopped

    # Service which is responsible for data management
    data-service:
        container_name: cryptoscan-data-management-service
        build:
            context: ${PWD}/data_service/
            dockerfile: Dockerfile
        image: cryptoscan-data-management-service
        command: uvicorn app.main:app --host 0.0.0.0
        ports:
            - 8081:8000
        env_file:
            - cryptoscanenvs/.database.env
            - cryptoscanenvs/.redis.env
            - ${SECRET_ENVS}
        depends_on:
            - database
            - redis
            - celery
        restart: unless-stopped

    # Async tasks worker
    celery:
        container_name: cryptoscan-celery
        build:
            context: ${PWD}/data_service/
            dockerfile: Dockerfile
        image: cryptoscan-celery
        env_file:
            - cryptoscanenvs/.database.env
            - cryptoscanenvs/.redis.env
        # command: watchmedo auto-restart --pattern '*.py' --signal SIGINT --recursive -- celery -A transformer worker -l debug
        # volumes:
        #   - ${PWD}/backend/:/home/user/backend/:delegated

    # In-memory database and Message Broker
    redis:
        container_name: cryptoscan-redis
        image: redis:6
        ports:
            - "6379:6379"
        restart: unless-stopped

    # Database storing crypto prices
    database:
        container_name: cryptoscan-database
        image: postgres:9.6-alpine
        env_file:
            - cryptoscanenvs/.database.env
        ports:
            - "5432:5432"
        restart: unless-stopped

    # Service which analyze the market movements
    analyzer-service:
        container_name: cryptoscan-analyzer-service
        build:
            context: ./analyzer_service
            dockerfile: Dockerfile
        image: cryptoscan-analyzer-service
        command: uvicorn app.main:app --host 0.0.0.0
        ports:
            - 8082:8000
        depends_on:
            - data-service
        restart: unless-stopped

    # API Gateway for all the services
    nginx:
        container_name: cryptoscan-nginx
        image: nginx:latest
        volumes:
            - ${PWD}/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 8080:80
        depends_on:
            - data-service
            - analyzer-service
        restart: unless-stopped
